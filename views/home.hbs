<h1>tableau de bord</h1>

<div class="float-right">
  <img src="/tag.jpg" width="160">
</div>

<h2>mode</h2>
<form method="post" action="/nabd" class="d-inline"><input name="data" value='{"type":"mode","mode":"interactive"}' hidden><button type="submit">interactive</button></form>
<form method="post" action="/nabd" class="d-inline"><input name="data" value='{"type":"mode","mode":"idle"}' hidden><button type="submit">idle</button></form>
<form method="post" action="/nabd" class="d-inline"><input name="data" value='{"type":"wakeup"}' hidden><button type="submit">wakeup</button></form>
<form method="post" action="/nabd" class="d-inline"><input name="data" value='{"type":"sleep"}' hidden><button type="submit">sleep</button></form>

<h2>nabd gestalt</h2>

<div id="gestalt">
  <div class="ob">
    <div>state</div>
    <div>{state}</div>
    <div>uptime</div>
    <div>{uptime}</div>
    <div>connections</div>
    <div>{connections}</div>
    <div>hardware</div>
    <div></div>
    <div>model</div>
    <div>{model}</div>
    <div>sound_card</div>
    <div>{sound_card}</div>
    <div>sound_input</div>
    <div>{sound_input}</div>
    <div>rfid</div>
    <div>{rfid}</div>
    <div>left_ear_status</div>
    <div>{left_ear_status}</div>
    <div>right_ear_status</div>
    <div>{right_ear_status}</div>
  </div>
</div>

<h2>operating system</h2>

<div class="ob">
  <div>platform, arch</div>
  <div>{{os.platform}}, {{os.arch}}</div>
  <div>type, release</div>
  <div>{{os.type}}, {{os.release}}</div>
  <div>freemem / totalmem</div>
  <div>{{os.freemem}} / {{os.totalmem}}</div>
  <div>cpus</div>
  <div>
    <pre>{{stringify os.cpus}}</pre>
  </div>
</div></div>

<script type="module">

  // mise à jour de l'état du nabaztag

  import {obReact} from './js/modules/ob-react.mjs';

  const obReactData = obReact.setReactData('#gestalt');

  window.socket = io.connect(location.hostname + ':8076');
  socket.on('connect', function() {
    console.log('connect');
    socket.emit('getGestalt');
  });

  socket.on('gestalt', function(data) {
    const dataObj = JSON.parse(data);
    Object.keys(dataObj).forEach(function(key) {
      if(key === 'uptime') dataObj[key] = helpers.toHHMMSS(dataObj[key]);
      if(key === 'hardware') {
        const hardware = dataObj[key];
        Object.keys(hardware).forEach(function(key) {
          obReactData[key] = hardware[key];
        });
      }
      else
        obReactData[key] = dataObj[key];
    });
  });
</script>